<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ReplState" timestamp="1498617165183">{:repl-history {:ide [], :local [&quot;(ns cli.db\n  (:use korma.db :only [oracle]\n        korma.core))&quot; &quot;(ns cli.db\n  (:use [clojure.test :only [deftest is testing use-fixtures]]\n        [korma.core :only [exec-raw]]\n        [korma.db :only [connection-pool defdb get-connection h2\n                         msaccess mssql mysql odbc oracle postgres sqlite3 vertica firebird default-connection transaction]]))\n&quot; &quot;(def db {:classname \&quot;oracle.jdbc.driver.OracleDriver\&quot;\n         :subprotocol \&quot;oracle:thin\&quot;\n         :subname \&quot;@127.0.0.1:1521:alandb\&quot;\n         :make-pool? true})&quot; &quot;(defdb korma-db db)\n&quot; &quot;(declare dual)\n(defentity dual)\n&quot; &quot;(ns cli.db\n  (:use [clojure.test :only [deftest is testing use-fixtures]]\n        [korma.core :only [exec-raw]]\n        [korma.db :only [connection-pool defdb get-connection h2\n                         msaccess mssql mysql odbc oracle postgres sqlite3 vertica firebird default-connection transaction]]))&quot; &quot;(def db {:classname \&quot;oracle.jdbc.driver.OracleDriver\&quot;\n         :subprotocol \&quot;oracle:thin\&quot;\n         :subname \&quot;@127.0.0.1:1521:orcl\&quot;\n         :make-pool? true})&quot; &quot;(ns cli.db \n  (:use (korma db core)))&quot; &quot;(ns cli.db\n  (:use [korma.db korma.core]))&quot; &quot;(ns cli.db\n  (:use [korma.db] \n        [korma.core]))&quot; &quot;(declare tab)&quot; &quot;(defentity tab)&quot; &quot;(select tab)&quot; &quot;(ns cli.db)&quot; &quot;(def db {:classname \&quot;oracle.jdbc.driver.OracleDriver\&quot;\n         :subprotocol \&quot;oracle:thin\&quot;\n         :subname \&quot;@127.0.0.1:1521:orcl\&quot;\n         :make-pool? true\n         :user \&quot;alan\&quot;\n         :password \&quot;alan\&quot;})\n(defdb korma-db db)\n&quot; &quot;(declare test)&quot; &quot;(defentity test)&quot; &quot;(select test)&quot; &quot;(def db {:classname \&quot;oracle.jdbc.driver.OracleDriver\&quot;\n         :subprotocol \&quot;oracle:thin\&quot;\n         :subname \&quot;@127.0.0.1:1521:orcl\&quot;\n         :make-pool? true\n         :user \&quot;alan\&quot;\n         :password \&quot;alan\&quot;})&quot; &quot;(defdb korma-db db)&quot; &quot;(defentity test1)&quot; &quot;(select* test1)&quot; &quot;(select* test1 (select))&quot; &quot;(-&gt; (select* test1))&quot; &quot;(declare dual)&quot; &quot;(defentity dual)&quot; &quot;(-&gt; (select* dual) (as-sql))&quot; &quot;(defentity test1\n           (database korma-db))&quot; &quot;(oracle {})&quot; &quot;(oracle {:host \&quot;@127.0.0.1/orcl\&quot; :port \&quot;1521\&quot; })&quot; &quot;(oracle {:host \&quot;127.0.0.1:1521:orcl\&quot; :port \&quot;1521\&quot; })&quot; &quot;(-&gt; (create-db (oracle {})) :pool deref :datasource .getDriverClass)&quot; &quot;(-&gt; (create-db (oracle {})) :pool deref :datasource .getJdbcUrl)&quot; &quot;(-&gt; (create-db (oracle {:sid \&quot;orcl\&quot;})) :pool deref :datasource .getJdbcUrl)&quot; &quot;(oracle {:host \&quot;127.0.0.1:1521:orcl\&quot;\n         :make-pool? false})&quot; &quot;(oracle {:host \&quot;127.0.0.1\&quot; :port \&quot;1521:orcl\&quot;\n         :make-pool? false})&quot; &quot;(-&gt; (select* dual) (select))&quot; &quot;(-&gt; (select* test1) (select))&quot; &quot;test1&quot; &quot;(ns cli.db\n   (:use korma.db\n         korma.core))&quot; &quot;(defdb ora1 (oracle {:host \&quot;127.0.0.1\&quot; :port \&quot;1521:orcl\&quot;\n                     :make-pool? false :user \&quot;alan\&quot; :password \&quot;alan\&quot;})) &quot; &quot;(declare dual)\n(defentity dual)&quot; &quot;(select dual)&quot; &quot;(declare test1)&quot; &quot;(defentity test1\n           (database :test1 ora1))&quot; &quot;(defentity test1\n           (database ora1))&quot; &quot;(select test1)&quot; &quot;(-&gt; (select* test1) (as-sql))&quot; &quot;(declare TEST1)&quot; &quot;(defentity TEST1)&quot; &quot;(select TEST1)&quot; &quot;(declare DUAL)&quot; &quot;(defentity DUAL)&quot; &quot;(select DUAL)&quot; &quot;(ns cli.db\n   (:require '[clojure.java.jdbc :as jdbc]))&quot; &quot;(def db {:classname  \&quot;oracle.jdbc.OracleDriver\&quot;\n            :subprotocol    \&quot;oracle\&quot;\n            :subname        \&quot;thin:@127.0.0.1:1521:orcl\&quot;\n            :user               \&quot;alan\&quot;\n            :password       \&quot;alan\&quot;})&quot; &quot;(sql/query db [\&quot;select sysdate from test1\&quot;])&quot; &quot;(def db {:classname  \&quot;oracle.jdbc.OracleDriver\&quot;\n            :subprotocol    \&quot;oracle:oci\&quot;\n            :subname        \&quot;127.0.0.1:1521:orcl\&quot;\n            :user               \&quot;alan\&quot;\n            :password       \&quot;alan\&quot;})&quot; &quot;(def db {:classname  \&quot;oracle.jdbc.OracleDriver\&quot;\n            :subprotocol    \&quot;oracle:thin\&quot;\n            :subname        \&quot;127.0.0.1:1521:orcl\&quot;\n            :user               \&quot;alan\&quot;\n            :password       \&quot;alan\&quot;})&quot; &quot;(sql/query db [\&quot;select * from test1\&quot;])&quot; &quot;(println (jdbc/query db [\&quot;select sysdate from dual\&quot;]))&quot; &quot;(sql/query db [\&quot;select sysdate from dual\&quot;])&quot; &quot;(sql/db-connection db1)&quot; &quot;(sql/get-connection db1)&quot; &quot;(sql/get-connection {:connection-uri \&quot;java:oracle:thin:@127.0.0.1:1521:orcl\&quot;})&quot; &quot;(sql/get-connection {:connection db})&quot; &quot;(sql/get-connection {:connection db1})&quot; &quot;(-&gt; (sql/get-connection {:connection db1}) .getJdbcUrl)&quot; &quot;(-&gt; (sql/get-connection {:connection db1}) :datasource .getJdbcUrl)&quot; &quot;(-&gt; (sql/get-connection {:connection db1}) :pool deref :datasource .getJdbcUrl)&quot; &quot;(-&gt; (sql/db-connection {:connection db1}) :pool deref :datasource .getJdbcUrl)&quot; &quot;(-&gt; (sql/db-connection {:connection db}) :pool deref :datasource .getJdbcUrl)&quot; &quot;(-&gt; (sql/db-connection {:connection db}) :pool deref :datasource .getDriverClass)&quot; &quot;(sql/query [\&quot;select * from dual\&quot;])&quot; &quot;(sql/query db [\&quot;select * from dual\&quot;])&quot; &quot;(def db1 {:classname  \&quot;oracle.jdbc.OracleDriver\&quot;\n         :subprotocol    \&quot;oracle:oci8\&quot;\n         :subname        \&quot;orcl\&quot;\n         :user               \&quot;alan\&quot;\n         :password       \&quot;alan\&quot;})&quot; &quot;(def db1 {:classname  \&quot;oracle.jdbc.OracleDriver\&quot;\n         :subprotocol    \&quot;oracle:oci8\&quot;\n         :subname        \&quot;@orcl\&quot;\n         :user               \&quot;alan\&quot;\n         :password       \&quot;alan\&quot;})&quot; &quot;(def db1 {:classname  \&quot;oracle.jdbc.OracleDriver\&quot;\n         :subprotocol    \&quot;oracle:oci8\&quot;\n         :subname        \&quot;:orcl\&quot;\n         :user               \&quot;alan\&quot;\n         :password       \&quot;alan\&quot;})&quot; &quot;(def db1 {:classname  \&quot;oracle.jdbc.OracleDriver\&quot;\n         :subprotocol    \&quot;oracle:oci8\&quot;\n         :subname        \&quot;alandb\&quot;\n         :user               \&quot;alan\&quot;\n         :password       \&quot;alan\&quot;})&quot; &quot;(def db1 {:classname  \&quot;oracle.jdbc.driver.OracleDriver\&quot;\n         :subprotocol    \&quot;oracle:oci\&quot;\n         :subname        \&quot;alandb\&quot;\n         :user               \&quot;alan\&quot;\n         :password       \&quot;alan\&quot;})&quot; &quot;(def db1 {:classname  \&quot;oracle.jdbc.driver.OracleDriver\&quot;\n         :subprotocol    \&quot;oracle:oci\&quot;\n         :subname        \&quot;orcl\&quot;\n         :user               \&quot;alan\&quot;\n         :password       \&quot;alan\&quot;})&quot; &quot;(def db1 {:classname  \&quot;oracle.jdbc.driver.OracleDriver\&quot;\n         :subprotocol    \&quot;oracle:oci\&quot;\n         :subname        \&quot;/orcl\&quot;\n         :user               \&quot;alan\&quot;\n         :password       \&quot;alan\&quot;})&quot; &quot;(sql/query db1 [\&quot;select * from dual\&quot;])&quot; &quot;(println (jdbc/query db1 [\&quot;select sysdate from dual\&quot;]))&quot; &quot;(def db1 {:classname  \&quot;oracle.jdbc.OracleDriver\&quot;\n         :subprotocol    \&quot;oracle:oci\&quot;\n         :subname        \&quot;/orcl\&quot;\n         :user               \&quot;alan\&quot;\n         :password       \&quot;alan\&quot;})&quot; &quot;(def db1 {:classname  \&quot;oracle.jdbc.OracleDriver\&quot;\n         :subprotocol    \&quot;oracle:oci\&quot;\n         :subname        \&quot;127.0.0.1:1521:orcl\&quot;\n         :user               \&quot;alan\&quot;\n         :password       \&quot;alan\&quot;})&quot; &quot;(def db1 {:classname  \&quot;oracle.jdbc.OracleDriver\&quot;\n         :subprotocol    \&quot;oracle:oci\&quot;\n         :subname        \&quot;orcl\&quot;\n         :user               \&quot;alan\&quot;\n         :password       \&quot;alan\&quot;})&quot; &quot;(def db1 {:classname  \&quot;oracle.jdbc.OracleDriver\&quot;\n         :subprotocol    \&quot;oracle:oci\&quot;\n         :subname        \&quot;@orcl\&quot;\n         :user               \&quot;alan\&quot;\n         :password       \&quot;alan\&quot;})&quot; &quot;(def db1 {:classname  \&quot;oracle.jdbc.OracleDriver\&quot;\n         :subprotocol    \&quot;oracle:oci\&quot;\n         :subname        \&quot;127.0.0.1:1521:@orcl\&quot;\n         :user               \&quot;alan\&quot;\n         :password       \&quot;alan\&quot;})&quot; &quot;(def db1 {:classname  \&quot;oracle.jdbc.OracleDriver\&quot;\n         :subprotocol    \&quot;oracle:oci\&quot;\n         :subname        \&quot;alandb\&quot;\n         :user               \&quot;alan\&quot;\n         :password       \&quot;alan\&quot;})&quot; &quot;(time (sql/query db [\&quot;select * from test1\&quot;]))&quot; &quot;(time (sql/query db1 [\&quot;select * from test1\&quot;]))&quot; &quot;(time (sql/query db1 [\&quot;select count(*) from all_objects\&quot;]))&quot; &quot;(time (sql/query db [\&quot;select count(*) from all_objects\&quot;]))&quot; &quot;(time (sql/query db [\&quot;select count(*) cnt from all_objects\&quot;]))&quot; &quot;(time (sql/query db1 [\&quot;select count(*) cnt from all_objects\&quot;]))&quot; &quot;(ns cli.db\n   (:require [clojure.java.jdbc :as sql]))&quot; &quot;(def db {:classname  \&quot;oracle.jdbc.OracleDriver\&quot;\n         :subprotocol    \&quot;oracle:thin\&quot;\n         :subname        \&quot;127.0.0.1:1521:orcl\&quot;\n         :user               \&quot;alan\&quot;\n         :password       \&quot;alan\&quot;})&quot; &quot;(def db1 {:classname  \&quot;oracle.jdbc.OracleDriver\&quot;\n         :subprotocol    \&quot;oracle:oci\&quot;\n         :subname        \&quot;@alandb\&quot;\n         :user               \&quot;alan\&quot;\n         :password       \&quot;alan\&quot;})&quot; &quot;(println (sql/query db [\&quot;select sysdate from dual\&quot;]))&quot; &quot;(println (sql/query db1 [\&quot;select sysdate from dual\&quot;]))&quot;], :remote []}}</component>
</project>